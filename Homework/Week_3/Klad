// Sophie Schubert
// 10699988

// Get JSON file
var fileName = "burnout.json";
var txtFile = new XMLHttpRequest();
txtFile.onreadystatechange = function() {
  if (txtFile.readyState === 4 && txtFile.status == 200) {
    console.log(JSON.parse(txtFile.responseText));

    // Stor data
    var data = JSON.parse(txtFile.responseText);

    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');

    var GRAPH_TOP = 50;
    var GRAPH_BOTTOM = 375;
    var GRAPH_LEFT = 50;
    var GRAPH_RIGHT = 475;

    var GRAPH_HEIGHT = 350;
    var GRAPH_WIDTH = 450;

    ctx.beginPath();
    ctx.moveTo( GRAPH_TOP, GRAPH_BOTTOM );
    ctx.lineTo( GRAPH_RIGHT, GRAPH_BOTTOM );
    ctx.lineTo( GRAPH_RIGHT, GRAPH_TOP );
    ctx.stroke();

    data.forEach(function(d){
      d["Year"] = Number(d["Year"])
      d["Total Burnout Rate"] = Number(d["Total Burnout Rate"])

    });


}
}
txtFile.open("GET", fileName);
txtFile.send();

function createTransform(domain, range){
// domain is a two-element array of the data bounds [domain_min, domain_max]
// range is a two-element array of the screen bounds [range_min, range_max]
// this gives you two equations to solve:
// range_min = alpha * domain_min + beta
// range_max = alpha * domain_max + beta
// a solution would be:

  var domain_min = domain[0]
  var domain_max = domain[1]
  var range_min = range[0]
  var range_max = range[1]

  // formulas to calculate the alpha and the beta
  var alpha = (range_max - range_min) / (domain_max - domain_min)
  var beta = range_max - alpha * domain_max

  // returns the function for the linear transformation (y= a * x + b)
  return function(x){
    return alpha * x + beta;
  }
}


// Sophie Schubert
// 10699988

// Get JSON file
var fileName = "burnout.json";
var txtFile = new XMLHttpRequest();
txtFile.onreadystatechange = function() {
  if (txtFile.readyState === 4 && txtFile.status == 200) {
    console.log(JSON.parse(txtFile.responseText));

    // Store JSON data
    var data = JSON.parse(txtFile.responseText);

    // Make canvas lines
    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');

    var GRAPH_TOP = 50;
    var GRAPH_BOTTOM = 375;
    var GRAPH_LEFT = 50;
    var GRAPH_RIGHT = 475;

    var GRAPH_HEIGHT = 350;
    var GRAPH_WIDTH = 450;

    ctx.beginPath();
    ctx.moveTo( GRAPH_TOP, GRAPH_BOTTOM );
    ctx.lineTo( GRAPH_RIGHT, GRAPH_BOTTOM );
    ctx.lineTo( GRAPH_RIGHT, GRAPH_TOP );
    ctx.stroke();

    data.forEach(function(d){
      d["Year"] = Number(d["Year"])
      d["Total Burnout Rate"] = Number(d["Total Burnout Rate"])

    });


}
}
txtFile.open("GET", fileName);
txtFile.send();

function createTransform(domain, range){
// domain is a two-element array of the data bounds [domain_min, domain_max]
// range is a two-element array of the screen bounds [range_min, range_max]
// this gives you two equations to solve:
// range_min = alpha * domain_min + beta
// range_max = alpha * domain_max + beta
// a solution would be:

  var domain_min = domain[0]
  var domain_max = domain[1]
  var range_min = range[0]
  var range_max = range[1]

  // formulas to calculate the alpha and the beta
  var alpha = (range_max - range_min) / (domain_max - domain_min)
  var beta = range_max - alpha * domain_max

  // returns the function for the linear transformation (y= a * x + b)
  return function(x){
    return alpha * x + beta;
  }
}


data.forEach(function(d){
  var x = createTransform([2005, 2017], [0,300]);
  var y = createTransform([892, 2029], [300, 0]);

  console.log(x(2006));
});




  //     // canvas width
  // var canvas_width = canvas.width;
  //
  // // canvas height
  // var canvas_height = canvas.height;
  //
  // // no of vertical grid lines
  // var num_lines_x = Math.floor(canvas_height/grid_size);
  //
  // // no of horizontal grid lines
  // var num_lines_y = Math.floor(canvas_width/grid_size);



  // Sophie Schubert
  // 10699988

  // Get JSON file
  var fileName = "burnout.json";
  var txtFile = new XMLHttpRequest();

  txtFile.onreadystatechange = function() {
    if (txtFile.readyState === 4 && txtFile.status == 200) {
      console.log(JSON.parse(txtFile.responseText));

      // Transformation
      var x = createTransform([2005, 2017], [50,500]);
      var y = createTransform([800, 2400], [300, 100]);;

      // Store JSON data
      data = JSON.parse(txtFile.responseText);

      // Make canvas lines
      const canvas = document.getElementById('canvas');
      const ctx = canvas.getContext('2d');

      ctx.moveTo(50, 300);
      ctx.lineTo(50, 100);
      ctx.moveTo(50, 300);
      ctx.lineTo(500, 300);
      ctx.stroke();

      ctx.moveTo(x(Number(data[0]["Year"])), y((Number(data[0]["Total Burnout Rate"]))));

      // Create list for ticks
      yTicks = [y(800), y(2400)]
      xTicks = []

      data.forEach(function(d){
        // Get numeric of year and burnout
        d["Year"] = Number(d["Year"]);
        d["Total Burnout Rate"] = Number(d["Total Burnout Rate"]);
        console.log(d["Total Burnout Rate"]);
        xTicks.push(x(d["Year"]));
        // Draw line to each point
        ctx.lineTo(x(d["Year"]), y(d["Total Burnout Rate"]));
        });
      console.log(xTicks);

      // ctx.moveTo(50, 310);

      // Calculate difference between ticks
      nextX = xTicks[1] - xTicks[0]

      // Make ticks
      xTicks.forEach(function(xTick, index){
        ctx.lineTo(xTick, 300);
        ctx.moveTo(xTick + nextX, 310);
        ctx.fillText(data[index]["Year"], xTick - 10, 325);
      });

      // console.log(yTicks);
      // console.log(y(2400)/y(800))
      //
      // console.log(y(800))

      // for (i = 100; i <= 300; i += 37,5){
      //   ctx.lineTo(i, 50);
      //   ctx.moveTo(-20, i);
      // };
      //

      // Title
      ctx.font = "20px serif";
      ctx.fillText('Meldingen van burn-out als beroepziekte 2005 tot 2017',50,50);

      // Text for x and y
      ctx.font = "15px serif";
      ctx.fillText('Jaar',470,350);
      ctx.rotate(-90 * Math.PI / 180)
      ctx.translate(-100,450)
      ctx.fillText('Aantal meldingen',-150,-420);
    }
  }
  txtFile.open("GET", fileName);
  txtFile.send();

  function createTransform(domain, range){
  // domain is a two-element array of the data bounds [domain_min, domain_max]
  // range is a two-element array of the screen bounds [range_min, range_max]
  // this gives you two equations to solve:
  // range_min = alpha * domain_min + beta
  // range_max = alpha * domain_max + beta
  // a solution would be:

    var domain_min = domain[0]
    var domain_max = domain[1]
    var range_min = range[0]
    var range_max = range[1]

    // formulas to calculate the alpha and the beta
    var alpha = (range_max - range_min) / (domain_max - domain_min)
    var beta = range_max - alpha * domain_max

    // returns the function for the linear transformation (y= a * x + b)
    return function(x){
      return alpha * x + beta;
    }
  }
